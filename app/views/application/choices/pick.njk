{% extends "_form.njk" %}

{% set editing = applicationValue(["choices", choiceId]) %}
{% if editing %}
  {% set providerCode = applicationValue(["choices", choiceId, "providerCode"]) %}
{% else %}
  {% set providerCode = applicationValue(["temporaryChoices", choiceId, "provider"]) | providerCode %}
{% endif %}
{% set provider = providers[providerCode] %}
{% set providerOnDfEApply = false if providerCode == 'B20' else true %}
{% set courses = provider.courses | toArray | sort(attribute="name") %}
{% if not providerOnDfEApply %}
  {% set parent = "Primary (W1X1)" %}
{% endif%}
{% set title = "Which course are you applying to?" if providerOnDfEApply else "You need to apply for this course on UCAS" %}
{% set formaction = paths.next %}
{% set applicationPath = "/application/" + applicationId %}

{% block pageNavigation %}
  {{ govukBackLink({
    href: paths.back
  }) }}
{% endblock %}

{% block primary %}
  {% if providerOnDfEApply %}
    {% set courseAutocompleteHtml %}
      <div class="govuk-form-group">
        <label class="govuk-label" for="courses-{{ choiceId }}-course">Enter course name and code</label>
        <div id="course-autocomplete-container"></div>
      </div>
    {% endset %}

    {% if data.course_from_find and providerCode == data.course_from_find.providerCode %}
      {% set course = provider.courses[data.course_from_find.courseCode] %}
      {{ govukRadios({
        items: [{
          text: course.name_and_code
        }, {
          divider: "or"
        }, {
          text: "Another course",
          value: "another",
          conditional: {
            html: courseAutocompleteHtml
          }
        }]
      } | decorateApplicationAttributes(["temporaryChoices", choiceId, "courseFromFind"])) }}
    {% else %}
      {{ courseAutocompleteHtml | safe }}
    {% endif %}

    {{ govukButton({
      text: "Continue"
    }) }}
  {% else %}
    <p class="govuk-body">The provider you’ve chosen is not yet signed up to the new Apply for teacher training service. This means you must apply for it using UCAS.</p>
    <p class="govuk-body">If your other preferred providers are signed up to the new service, it’s possible to apply through both systems. You can choose a total of 3 courses across both services.</p>
    <p>For more information, see our <a href="https://getintoteaching.education.gov.uk/how-to-apply-for-teacher-training">Get into Teaching guidance on applying for teacher training</a>.</p>

    <h2 class="govuk-heading-m">Make a note of your course codes</h2>
    <p>When you apply through UCAS, you’ll need these codes for the choices section of your application form:</p>

    <div class="govuk-inset-text">
      <ul class="govuk-list">
        <li class="govuk-!-margin-bottom-2">
          Training provider code:
          <span class="govuk-!-display-block govuk-!-font-size-36 govuk-!-font-weight-bold">{{ providerCode }}</span>
        </li>
        <li>
          Training programme code:
          <span class="govuk-!-display-block govuk-!-font-size-36 govuk-!-font-weight-bold">W1X1</span>
        </li>
      </ul>
    </div>

    <p class="govuk-body"><a href="https://2020.teachertraining.apply.ucas.com/apply/student/login.do" class="govuk-button govuk-!-margin-bottom-0">Apply on UCAS</a></p>

    {% if not applicationValue('welcomeFlow') %}
      <p class="govuk-body">or</p>
      <p class="govuk-body"><a href="{{ applicationPath }}" class="govuk-link">Return to your application</a></p>
    {% endif %}
  {% endif %}
{% endblock %}

{% block pageScripts %}
  {% if providerOnDfEApply %}
    <script src="/public/javascripts/autocomplete.min.js"></script>
    <script>
      {% if editing %}
        {% set defaultValue = provider.courses[applicationValue(["choices", choiceId, "courseCode"])].name_and_code %}

        accessibleAutocomplete({
          defaultValue: "",
          name: "applications[{{ applicationId }}][temporaryChoices][{{ choiceId }}][course]",
          element: document.querySelector('#course-autocomplete-container'),
          id: 'courses-{{ choiceId }}-course',
          showAllValues: true,
          source: [
            {% for course in courses %}"{{ course.name_and_code }}",{% endfor %}
          ]
        })
      {% else %}
        accessibleAutocomplete({
          defaultValue: '{{ applicationValue(["temporaryChoices", choiceId, "course"]) }}',
          name: "applications[{{ applicationId }}][temporaryChoices][{{ choiceId }}][course]",
          element: document.querySelector('#course-autocomplete-container'),
          id: 'courses-{{ choiceId }}-course',
          showAllValues: true,
          source: [
            {% for course in courses %}"{{ course.name_and_code }}",{% endfor %}
          ]
        })
      {% endif %}
    </script>
  {% endif %}
{% endblock %}
